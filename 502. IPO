class Solution {
    public int findMaximizedCapital(int k, int w, int[] profits, int[] capital) {

        int[][]pair=new int [profits.length][2];

        for(int i=0;i<profits.length;i++)
        {
            pair[i][0]=profits[i];
            pair[i][1]=capital[i];

        }

        Arrays.sort(pair,(x,y)->x[1]-y[1]);
        PriorityQueue<Integer>pq=new PriorityQueue<>(Collections.reverseOrder());
        int ptr=0;
        for(int i=0;i<k;i++)
        {
            while(ptr<profits.length && pair[ptr][1]<=w)
            {
                pq.add(pair[ptr++][0]);
            }
            if(pq.isEmpty())
            {break;}

            w+=pq.poll();
        }

        return w;

        
    }
}
