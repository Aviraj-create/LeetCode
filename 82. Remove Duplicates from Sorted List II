/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode deleteDuplicates(ListNode head) {
        if(head==null)
        {
            return head;
        }

        Map<Integer,Integer>map=new HashMap<>();

        while(head!=null)
        {
            if(!map.containsKey(head.val))
            {
                map.put(head.val,1);
            }
            else
            {
                map.put(head.val,map.get(head.val)+1);
            }
            head=head.next;
        }
        //  ArrayList<Integer>lists=new ArrayList<>();
        ListNode x=null;
        for(Map.Entry<Integer, Integer> entry: map.entrySet())
        {
            if(entry.getValue()==1)
            {
                 x.val=entry.getKey();
                 x.next=new ListNode();
                 x=x.next;
            }

        }

        // Collections.sort(lists);
        // if(lists.size()==0)
        // {
        //     return null;
        // }
        // ListNode x=new ListNode(lists.get(0));
        // ListNode r=x;
        // for(int i=1;i<lists.size();i++)
        // {
        //     ListNode p=new ListNode(lists.get(i));
        //     x.next=p;
        //     x=x.next;
        // }

        // return r;
        return x;


}
}
