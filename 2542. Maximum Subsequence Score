class Solution {
    public long maxScore(int[] nums1, int[] nums2, int k) {

        int[][]pair=new int[nums1.length][2];
        for(int i=0;i<nums1.length;i++)
        {
            pair[i][0]=nums1[i];
            pair[i][1]=nums2[i];
        }

        Arrays.sort(pair,(a,b)->b[1]-a[1]);
        PriorityQueue<Integer>q=new PriorityQueue<>();
        long ans=Long.MIN_VALUE;
        long sum=0L;
        for(int j=0;j<nums1.length;j++)
        {
            sum+=pair[j][0];
            q.add(pair[j][0]);
            if(q.size()>k)
            {
                sum-=q.poll();
            }
            if(q.size()==k)
            {
                ans=Math.max(ans,sum*pair[j][1]);
            }
            
        }

        return ans;
        
        
    }
}
